// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace SW_APP.Migrations
{
    [DbContext(typeof(DvlHubContext))]
    [Migration("20220628161101_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Admin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("ime")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("prezime")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("Models.CV", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("RadnikID")
                        .HasColumnType("int");

                    b.Property<string>("adresa")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("email")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("godina_iskustva")
                        .HasColumnType("int");

                    b.Property<string>("jezici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("licni_opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obrazovanje")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("tehnologije")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefon")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("work_experience")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RadnikID");

                    b.ToTable("CV");
                });

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("email")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("grad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("korisnicko_ime")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("lozinka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("salt_value")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("tip")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("Models.Oglasi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("lokacija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("naziv")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("plata")
                        .HasColumnType("int");

                    b.Property<string>("remote_work")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("tehnologija")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("vreme")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Oglasi");
                });

            modelBuilder.Entity("Models.Poslodavac", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("ime")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("kontakt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("lokacija_firme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("naziv_firme")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("prezime")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("tip_poslodavca")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Poslodavac");
                });

            modelBuilder.Entity("Models.Private_Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ID_PosiljaocaID")
                        .HasColumnType("int");

                    b.Property<int?>("ID_PrimaocaID")
                        .HasColumnType("int");

                    b.Property<string>("naslov")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("poruka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("vreme_pristizanja")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ID_PosiljaocaID");

                    b.HasIndex("ID_PrimaocaID");

                    b.ToTable("Private_Message");
                });

            modelBuilder.Entity("Models.Radnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("ime")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("prezime")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Radnik");
                });

            modelBuilder.Entity("Models.Zahtevi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ID_PosiljaocaID")
                        .HasColumnType("int");

                    b.Property<int?>("ID_PrimaocaID")
                        .HasColumnType("int");

                    b.Property<int?>("OglasiID")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_PosiljaocaID");

                    b.HasIndex("ID_PrimaocaID");

                    b.HasIndex("OglasiID");

                    b.ToTable("Zahtevi");
                });

            modelBuilder.Entity("Models.Admin", b =>
                {
                    b.HasOne("Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Models.CV", b =>
                {
                    b.HasOne("Models.Radnik", "Radnik")
                        .WithMany()
                        .HasForeignKey("RadnikID");

                    b.Navigation("Radnik");
                });

            modelBuilder.Entity("Models.Oglasi", b =>
                {
                    b.HasOne("Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Models.Poslodavac", b =>
                {
                    b.HasOne("Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Models.Private_Message", b =>
                {
                    b.HasOne("Models.Korisnik", "ID_Posiljaoca")
                        .WithMany()
                        .HasForeignKey("ID_PosiljaocaID");

                    b.HasOne("Models.Korisnik", "ID_Primaoca")
                        .WithMany()
                        .HasForeignKey("ID_PrimaocaID");

                    b.Navigation("ID_Posiljaoca");

                    b.Navigation("ID_Primaoca");
                });

            modelBuilder.Entity("Models.Radnik", b =>
                {
                    b.HasOne("Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Models.Zahtevi", b =>
                {
                    b.HasOne("Models.Korisnik", "ID_Posiljaoca")
                        .WithMany()
                        .HasForeignKey("ID_PosiljaocaID");

                    b.HasOne("Models.Korisnik", "ID_Primaoca")
                        .WithMany()
                        .HasForeignKey("ID_PrimaocaID");

                    b.HasOne("Models.Oglasi", "Oglasi")
                        .WithMany()
                        .HasForeignKey("OglasiID");

                    b.Navigation("ID_Posiljaoca");

                    b.Navigation("ID_Primaoca");

                    b.Navigation("Oglasi");
                });
#pragma warning restore 612, 618
        }
    }
}
